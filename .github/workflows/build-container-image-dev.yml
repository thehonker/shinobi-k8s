name: Build Shinobi Image - Dev Branch

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write

concurrency:
  group: "shinobi-dev"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Fetch sources and get last commit hash for Shinobi:dev, apply patches
        run: |
          cd ${GITHUB_WORKSPACE}/src && git clone --single-branch --branch dev https://gitlab.com/Shinobi-Systems/Shinobi.git
          echo "LAST_COMMIT_HASH=$(cd ${GITHUB_WORKSPACE}/src/Shinobi && git --no-pager log -n 1 --pretty=format:"%H")" | tee "$GITHUB_ENV"
          cd ${GITHUB_WORKSPACE}/src/Shinobi && patch -p1 -i ${GITHUB_WORKSPACE}/src/0001-Add-discord.js-install-step-to-build.patch

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            type=raw,value=latest,priority=850,prefix=dev-
            type=schedule,enable=true,priority=900,pattern={{date 'YYYYMMDD'}},prefix=dev-
            type=raw,value=${{ env.LAST_COMMIT_HASH }},priority=800,prefix=dev-

      - name: Build and Push
        uses: docker/bake-action@v6
        with:
          set: build.args.EXCLUDE_DB=true
          push: true
          source: .
          files: |
            ./src/docker-bake.hcl
            cwd://${{ steps.meta.outputs.bake-file }}
          targets: build
